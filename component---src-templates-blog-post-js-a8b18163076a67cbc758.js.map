{"version":3,"sources":["webpack:///./src/templates/blogPost.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["query","Template","data","pageContext","next","prev","markdownRemark","title","frontmatter","html","style","fontFamily","className","dangerouslySetInnerHTML","__html","marginBottom","to","path","m","module","exports","require","default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","StaticQuery","props","children","Consumer","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"0FAAA,0EAmCaA,EAAK,aAUHC,UA1CE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACdC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACNC,EAAmBJ,EAAnBI,eACFC,EAAQD,EAAeE,YAAYD,MACnCE,EAAOH,EAAeG,KAC5B,OACI,6BACI,wBAAIC,MAAO,CAAEC,WAAY,WAAaJ,GACtC,yBAAKK,UAAU,WACXC,wBAAyB,CAAEC,OAAQL,GACnCC,MAAO,CACHC,WAAY,YAIpB,yBAAKD,MAAO,CAAEK,aAAc,OAAQJ,WAAY,WAC3CP,GACG,kBAAC,IAAD,CAAMY,GAAIZ,EAAKI,YAAYS,MAA3B,YACcb,EAAKI,YAAYD,QAIvC,yBAAKG,MAAO,CAAEC,WAAY,WACrBN,GACG,kBAAC,IAAD,CAAMW,GAAIX,EAAKG,YAAYS,MAA3B,YACcZ,EAAKG,YAAYD,W,oBC5BnD,IAAsBW,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,iCCA/C,uHAcyBK,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiB3B,EAAuB,EAAvBA,KAAMF,EAAiB,EAAjBA,MAAO8B,EAAU,EAAVA,OACzDC,EAAY7B,EACdA,EAAKA,KACL2B,EAAgB7B,IAAU6B,EAAgB7B,GAAOE,KAErD,OACE,kBAAC,IAAM8B,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAAC,GAAU,IACpBhC,EAAkCgC,EAAlChC,KAAMF,EAA4BkC,EAA5BlC,MAAO8B,EAAqBI,EAArBJ,OAAQK,EAAaD,EAAbC,SAE7B,OACE,kBAACV,EAAmBW,SAApB,MACG,SAAAP,GAAe,OACd,kBAACD,EAAD,CACE1B,KAAMA,EACNF,MAAOA,EACP8B,OAAQA,GAAUK,EAClBN,gBAAiBA,S,0ECnBZQ,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEb,IAAMc,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-templates-blog-post-js-a8b18163076a67cbc758.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nconst Template = ({ data, pageContext }) => {\n    const { next, prev } = pageContext\n    const { markdownRemark } = data\n    const title = markdownRemark.frontmatter.title\n    const html = markdownRemark.html\n    return (\n        <div>\n            <h1 style={{ fontFamily: 'avenir' }}>{title}</h1>\n            <div className='blogpost'\n                dangerouslySetInnerHTML={{ __html: html }}\n                style={{\n                    fontFamily: 'avenir'\n                }}\n            />\n\n            <div style={{ marginBottom: '1rem', fontFamily: 'avenir' }}>\n                {next &&\n                    <Link to={next.frontmatter.path}>\n                        Next: {`${next.frontmatter.title}`}\n                    </Link>\n                }\n            </div>\n            <div style={{ fontFamily: 'avenir' }}>\n                {prev &&\n                    <Link to={prev.frontmatter.path}>\n                        Prev: {`${prev.frontmatter.title}`}\n                    </Link>\n                }\n            </div>\n        </div>\n    )\n}\nexport const query = graphql`\nquery($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: {eq: $pathSlug} }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\nexport default Template","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}